/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package scale.mod.ope.form;

import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.event.FocusEvent;
import java.awt.event.FocusListener;
import javax.swing.JButton;
import javax.swing.JOptionPane;
import sa.lib.SLibConsts;
import sa.lib.SLibUtils;
import sa.lib.db.SDbRegistry;
import sa.lib.gui.SGuiClient;
import sa.lib.gui.SGuiConsts;
import sa.lib.gui.SGuiUtils;
import sa.lib.gui.SGuiValidation;
import sa.lib.gui.bean.SBeanFieldDecimal;
import sa.lib.gui.bean.SBeanForm;
import scale.mod.SModConsts;
import scale.mod.ope.db.SDbPayment;
import scale.mod.ope.db.SDbWeighing;
import scale.mod.ope.db.SOpeConsts;
import scale.mod.ope.db.SOpeUtils;

/**
 *
 * @author Sergio Flores
 */
public class SFormPayment extends SBeanForm implements ActionListener, FocusListener {

    private SDbPayment moRegistry;

    /**
     * Creates new form SFormLocality
     */
    public SFormPayment(SGuiClient client, String title) {
        setFormSettings(client, SGuiConsts.BEAN_FORM_EDIT, SModConsts.O_PAY, SLibConsts.UNDEFINED, title);
        initComponents();
        initComponentsCustom();
    }


    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jPanel5 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        jPanel3 = new javax.swing.JPanel();
        jlDate = new javax.swing.JLabel();
        moDateDate = new sa.lib.gui.bean.SBeanFieldDate();
        jPanel4 = new javax.swing.JPanel();
        jlNumber = new javax.swing.JLabel();
        moIntNumber = new sa.lib.gui.bean.SBeanFieldInteger();
        jPanel9 = new javax.swing.JPanel();
        jlItem = new javax.swing.JLabel();
        moTextItem = new sa.lib.gui.bean.SBeanFieldText();
        jPanel7 = new javax.swing.JPanel();
        jlSupplier = new javax.swing.JLabel();
        moTextSupplier = new sa.lib.gui.bean.SBeanFieldText();
        jPanel8 = new javax.swing.JPanel();
        jlLocality = new javax.swing.JLabel();
        moTextLocality = new sa.lib.gui.bean.SBeanFieldText();
        jPanel10 = new javax.swing.JPanel();
        jlNotes = new javax.swing.JLabel();
        moTextNotes = new sa.lib.gui.bean.SBeanFieldText();
        jPanel11 = new javax.swing.JPanel();
        jlNotesOnDelete = new javax.swing.JLabel();
        moTextNotesOnDelete = new sa.lib.gui.bean.SBeanFieldText();
        jPanel24 = new javax.swing.JPanel();
        jckPayed = new javax.swing.JCheckBox();
        jPanel12 = new javax.swing.JPanel();
        jckDisabled = new javax.swing.JCheckBox();
        jPanel23 = new javax.swing.JPanel();
        jckDeleted = new javax.swing.JCheckBox();
        jPanel6 = new javax.swing.JPanel();
        jPanel17 = new javax.swing.JPanel();
        jlWeightNet_r = new javax.swing.JLabel();
        moCompWeightNet_r = new sa.lib.gui.bean.SBeanCompoundField();
        jPanel18 = new javax.swing.JPanel();
        jlPriceUnitary = new javax.swing.JLabel();
        moCurPriceUnitary = new sa.lib.gui.bean.SBeanCompoundFieldCurrency();
        jPanel19 = new javax.swing.JPanel();
        jlTotal_r = new javax.swing.JLabel();
        moCurTotal_r = new sa.lib.gui.bean.SBeanCompoundFieldCurrency();
        jPanel21 = new javax.swing.JPanel();
        jlPayments = new javax.swing.JLabel();
        moCurPayments = new sa.lib.gui.bean.SBeanCompoundFieldCurrency();
        jPanel22 = new javax.swing.JPanel();
        jlBalance = new javax.swing.JLabel();
        moCurBalance = new sa.lib.gui.bean.SBeanCompoundFieldCurrency();
        jPanel13 = new javax.swing.JPanel();
        jlPaymentDate = new javax.swing.JLabel();
        moDatePaymentDate = new sa.lib.gui.bean.SBeanFieldDate();
        jPanel14 = new javax.swing.JPanel();
        jlPaymentNumber = new javax.swing.JLabel();
        moIntPaymentNumber = new sa.lib.gui.bean.SBeanFieldInteger();
        jPanel29 = new javax.swing.JPanel();
        jlPaymentPayment = new javax.swing.JLabel();
        moCurPaymentPayment = new sa.lib.gui.bean.SBeanCompoundFieldCurrency();
        jbPayBalance = new javax.swing.JButton();
        jPanel30 = new javax.swing.JPanel();
        jlBalanceNew = new javax.swing.JLabel();
        moCurBalanceNew = new sa.lib.gui.bean.SBeanCompoundFieldCurrency();

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder("Datos del registro:"));
        jPanel1.setLayout(new java.awt.BorderLayout());

        jPanel5.setLayout(new java.awt.GridLayout(1, 2));

        jPanel2.setLayout(new java.awt.GridLayout(10, 0, 0, 5));

        jPanel3.setLayout(new java.awt.FlowLayout(3, 5, 0));

        jlDate.setText("Fecha boleto:*");
        jlDate.setPreferredSize(new java.awt.Dimension(100, 23));
        jPanel3.add(jlDate);

        moDateDate.setEditable(false);
        jPanel3.add(moDateDate);

        jPanel2.add(jPanel3);

        jPanel4.setLayout(new java.awt.FlowLayout(3, 5, 0));

        jlNumber.setText("Folio boleto:");
        jlNumber.setPreferredSize(new java.awt.Dimension(100, 23));
        jPanel4.add(jlNumber);

        moIntNumber.setEditable(false);
        jPanel4.add(moIntNumber);

        jPanel2.add(jPanel4);

        jPanel9.setLayout(new java.awt.FlowLayout(3, 5, 0));

        jlItem.setText("Producto:*");
        jlItem.setPreferredSize(new java.awt.Dimension(100, 23));
        jPanel9.add(jlItem);

        moTextItem.setEditable(false);
        moTextItem.setText("TEXT");
        moTextItem.setPreferredSize(new java.awt.Dimension(250, 23));
        jPanel9.add(moTextItem);

        jPanel2.add(jPanel9);

        jPanel7.setLayout(new java.awt.FlowLayout(3, 5, 0));

        jlSupplier.setText("Proveedor:*");
        jlSupplier.setPreferredSize(new java.awt.Dimension(100, 23));
        jPanel7.add(jlSupplier);

        moTextSupplier.setEditable(false);
        moTextSupplier.setText("TEXT");
        moTextSupplier.setPreferredSize(new java.awt.Dimension(250, 23));
        jPanel7.add(moTextSupplier);

        jPanel2.add(jPanel7);

        jPanel8.setLayout(new java.awt.FlowLayout(3, 5, 0));

        jlLocality.setText("Localidad:*");
        jlLocality.setPreferredSize(new java.awt.Dimension(100, 23));
        jPanel8.add(jlLocality);

        moTextLocality.setEditable(false);
        moTextLocality.setText("TEXT");
        moTextLocality.setPreferredSize(new java.awt.Dimension(250, 23));
        jPanel8.add(moTextLocality);

        jPanel2.add(jPanel8);

        jPanel10.setLayout(new java.awt.FlowLayout(3, 5, 0));

        jlNotes.setText("Notas:");
        jlNotes.setPreferredSize(new java.awt.Dimension(100, 23));
        jPanel10.add(jlNotes);

        moTextNotes.setEditable(false);
        moTextNotes.setText("TEXT");
        moTextNotes.setPreferredSize(new java.awt.Dimension(250, 23));
        jPanel10.add(moTextNotes);

        jPanel2.add(jPanel10);

        jPanel11.setLayout(new java.awt.FlowLayout(3, 5, 0));

        jlNotesOnDelete.setText("Notas eliminaci√≥n:*");
        jlNotesOnDelete.setPreferredSize(new java.awt.Dimension(100, 23));
        jPanel11.add(jlNotesOnDelete);

        moTextNotesOnDelete.setEditable(false);
        moTextNotesOnDelete.setText("TEXT");
        moTextNotesOnDelete.setPreferredSize(new java.awt.Dimension(250, 23));
        jPanel11.add(moTextNotesOnDelete);

        jPanel2.add(jPanel11);

        jPanel24.setLayout(new java.awt.FlowLayout(3, 5, 0));

        jckPayed.setText("Cerrado para pago");
        jckPayed.setEnabled(false);
        jckPayed.setPreferredSize(new java.awt.Dimension(200, 23));
        jPanel24.add(jckPayed);

        jPanel2.add(jPanel24);

        jPanel12.setLayout(new java.awt.FlowLayout(3, 5, 0));

        jckDisabled.setText("Cancelado");
        jckDisabled.setEnabled(false);
        jckDisabled.setPreferredSize(new java.awt.Dimension(200, 23));
        jPanel12.add(jckDisabled);

        jPanel2.add(jPanel12);

        jPanel23.setLayout(new java.awt.FlowLayout(3, 5, 0));

        jckDeleted.setText("Eliminado");
        jckDeleted.setEnabled(false);
        jckDeleted.setPreferredSize(new java.awt.Dimension(200, 23));
        jPanel23.add(jckDeleted);

        jPanel2.add(jPanel23);

        jPanel5.add(jPanel2);

        jPanel6.setLayout(new java.awt.GridLayout(10, 0, 0, 5));

        jPanel17.setLayout(new java.awt.FlowLayout(3, 5, 0));

        jlWeightNet_r.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jlWeightNet_r.setText("Peso neto:");
        jlWeightNet_r.setPreferredSize(new java.awt.Dimension(100, 23));
        jPanel17.add(jlWeightNet_r);

        moCompWeightNet_r.setEditable(false);
        jPanel17.add(moCompWeightNet_r);

        jPanel6.add(jPanel17);

        jPanel18.setLayout(new java.awt.FlowLayout(3, 5, 0));

        jlPriceUnitary.setText("Precio unitario:");
        jlPriceUnitary.setPreferredSize(new java.awt.Dimension(100, 23));
        jPanel18.add(jlPriceUnitary);

        moCurPriceUnitary.setEditable(false);
        jPanel18.add(moCurPriceUnitary);

        jPanel6.add(jPanel18);

        jPanel19.setLayout(new java.awt.FlowLayout(3, 5, 0));

        jlTotal_r.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jlTotal_r.setText("Total:");
        jlTotal_r.setPreferredSize(new java.awt.Dimension(100, 23));
        jPanel19.add(jlTotal_r);

        moCurTotal_r.setEditable(false);
        jPanel19.add(moCurTotal_r);

        jPanel6.add(jPanel19);

        jPanel21.setLayout(new java.awt.FlowLayout(3, 5, 0));

        jlPayments.setText("Pagos:");
        jlPayments.setPreferredSize(new java.awt.Dimension(100, 23));
        jPanel21.add(jlPayments);

        moCurPayments.setEditable(false);
        jPanel21.add(moCurPayments);

        jPanel6.add(jPanel21);

        jPanel22.setLayout(new java.awt.FlowLayout(3, 5, 0));

        jlBalance.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jlBalance.setText("Saldo:");
        jlBalance.setPreferredSize(new java.awt.Dimension(100, 23));
        jPanel22.add(jlBalance);

        moCurBalance.setEditable(false);
        jPanel22.add(moCurBalance);

        jPanel6.add(jPanel22);

        jPanel13.setLayout(new java.awt.FlowLayout(3, 5, 0));

        jlPaymentDate.setText("Fecha pago:*");
        jlPaymentDate.setPreferredSize(new java.awt.Dimension(100, 23));
        jPanel13.add(jlPaymentDate);
        jPanel13.add(moDatePaymentDate);

        jPanel6.add(jPanel13);

        jPanel14.setLayout(new java.awt.FlowLayout(3, 5, 0));

        jlPaymentNumber.setText("Folio pago:");
        jlPaymentNumber.setPreferredSize(new java.awt.Dimension(100, 23));
        jPanel14.add(jlPaymentNumber);

        moIntPaymentNumber.setEditable(false);
        jPanel14.add(moIntPaymentNumber);

        jPanel6.add(jPanel14);

        jPanel29.setLayout(new java.awt.FlowLayout(3, 5, 0));

        jlPaymentPayment.setText("Pago:");
        jlPaymentPayment.setPreferredSize(new java.awt.Dimension(100, 23));
        jPanel29.add(jlPaymentPayment);
        jPanel29.add(moCurPaymentPayment);

        jbPayBalance.setText("Pagar");
        jbPayBalance.setPreferredSize(new java.awt.Dimension(75, 23));
        jPanel29.add(jbPayBalance);

        jPanel6.add(jPanel29);

        jPanel30.setLayout(new java.awt.FlowLayout(3, 5, 0));

        jlBalanceNew.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jlBalanceNew.setText("Saldo nuevo:");
        jlBalanceNew.setPreferredSize(new java.awt.Dimension(100, 23));
        jPanel30.add(jlBalanceNew);

        moCurBalanceNew.setEditable(false);
        jPanel30.add(moCurBalanceNew);

        jPanel6.add(jPanel30);

        jPanel5.add(jPanel6);

        jPanel1.add(jPanel5, java.awt.BorderLayout.NORTH);

        getContentPane().add(jPanel1, java.awt.BorderLayout.CENTER);
    }// </editor-fold>//GEN-END:initComponents

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel10;
    private javax.swing.JPanel jPanel11;
    private javax.swing.JPanel jPanel12;
    private javax.swing.JPanel jPanel13;
    private javax.swing.JPanel jPanel14;
    private javax.swing.JPanel jPanel17;
    private javax.swing.JPanel jPanel18;
    private javax.swing.JPanel jPanel19;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel21;
    private javax.swing.JPanel jPanel22;
    private javax.swing.JPanel jPanel23;
    private javax.swing.JPanel jPanel24;
    private javax.swing.JPanel jPanel29;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel30;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JPanel jPanel8;
    private javax.swing.JPanel jPanel9;
    private javax.swing.JButton jbPayBalance;
    private javax.swing.JCheckBox jckDeleted;
    private javax.swing.JCheckBox jckDisabled;
    private javax.swing.JCheckBox jckPayed;
    private javax.swing.JLabel jlBalance;
    private javax.swing.JLabel jlBalanceNew;
    private javax.swing.JLabel jlDate;
    private javax.swing.JLabel jlItem;
    private javax.swing.JLabel jlLocality;
    private javax.swing.JLabel jlNotes;
    private javax.swing.JLabel jlNotesOnDelete;
    private javax.swing.JLabel jlNumber;
    private javax.swing.JLabel jlPaymentDate;
    private javax.swing.JLabel jlPaymentNumber;
    private javax.swing.JLabel jlPaymentPayment;
    private javax.swing.JLabel jlPayments;
    private javax.swing.JLabel jlPriceUnitary;
    private javax.swing.JLabel jlSupplier;
    private javax.swing.JLabel jlTotal_r;
    private javax.swing.JLabel jlWeightNet_r;
    private sa.lib.gui.bean.SBeanCompoundField moCompWeightNet_r;
    private sa.lib.gui.bean.SBeanCompoundFieldCurrency moCurBalance;
    private sa.lib.gui.bean.SBeanCompoundFieldCurrency moCurBalanceNew;
    private sa.lib.gui.bean.SBeanCompoundFieldCurrency moCurPaymentPayment;
    private sa.lib.gui.bean.SBeanCompoundFieldCurrency moCurPayments;
    private sa.lib.gui.bean.SBeanCompoundFieldCurrency moCurPriceUnitary;
    private sa.lib.gui.bean.SBeanCompoundFieldCurrency moCurTotal_r;
    private sa.lib.gui.bean.SBeanFieldDate moDateDate;
    private sa.lib.gui.bean.SBeanFieldDate moDatePaymentDate;
    private sa.lib.gui.bean.SBeanFieldInteger moIntNumber;
    private sa.lib.gui.bean.SBeanFieldInteger moIntPaymentNumber;
    private sa.lib.gui.bean.SBeanFieldText moTextItem;
    private sa.lib.gui.bean.SBeanFieldText moTextLocality;
    private sa.lib.gui.bean.SBeanFieldText moTextNotes;
    private sa.lib.gui.bean.SBeanFieldText moTextNotesOnDelete;
    private sa.lib.gui.bean.SBeanFieldText moTextSupplier;
    // End of variables declaration//GEN-END:variables

    /*
     * Private methods
     */

    private void initComponentsCustom() {
        SGuiUtils.setWindowBounds(this, 800, 500);

        moDateDate.setDateSettings(miClient, SGuiUtils.getLabelName(jlDate), true);
        moIntNumber.setIntegerSettings(SGuiUtils.getLabelName(jlNumber), SGuiConsts.GUI_TYPE_INT_RAW, true);
        moTextItem.setTextSettings(SGuiUtils.getLabelName(jlItem), 50, 0);
        moTextSupplier.setTextSettings(SGuiUtils.getLabelName(jlSupplier), 50, 0);
        moTextLocality.setTextSettings(SGuiUtils.getLabelName(jlLocality), 50, 0);
        moTextNotes.setTextSettings(SGuiUtils.getLabelName(jlNotes), 100, 0);
        moTextNotesOnDelete.setTextSettings(SGuiUtils.getLabelName(jlNotesOnDelete), 100);
        moCompWeightNet_r.setCompoundFieldSettings(miClient);
        moCompWeightNet_r.setCompoundText(SOpeConsts.KG);
        moCompWeightNet_r.getField().setDecimalSettings(SGuiUtils.getLabelName(jlWeightNet_r), SGuiConsts.GUI_TYPE_DEC_QTY, true);
        moCurPriceUnitary.setCompoundFieldSettings(miClient);
        moCurPriceUnitary.getField().setDecimalSettings(SGuiUtils.getLabelName(jlPriceUnitary), SGuiConsts.GUI_TYPE_DEC_AMT_UNIT, false);
        moCurTotal_r.setCompoundFieldSettings(miClient);
        moCurTotal_r.getField().setDecimalSettings(SGuiUtils.getLabelName(jlTotal_r), SGuiConsts.GUI_TYPE_DEC_AMT, false);
        moCurPayments.setCompoundFieldSettings(miClient);
        moCurPayments.getField().setDecimalSettings(SGuiUtils.getLabelName(jlPayments), SGuiConsts.GUI_TYPE_DEC_AMT, false);
        moCurBalance.setCompoundFieldSettings(miClient);
        moCurBalance.getField().setDecimalSettings(SGuiUtils.getLabelName(jlBalance), SGuiConsts.GUI_TYPE_DEC_AMT, false);
        moCurPaymentPayment.setCompoundFieldSettings(miClient);
        moCurPaymentPayment.getField().setDecimalSettings(SGuiUtils.getLabelName(jlPaymentPayment), SGuiConsts.GUI_TYPE_DEC_AMT, false);
        moCurBalanceNew.setCompoundFieldSettings(miClient);
        moCurBalanceNew.getField().setDecimalSettings(SGuiUtils.getLabelName(jlBalanceNew), SGuiConsts.GUI_TYPE_DEC_AMT, false);

        moFields.addField(moDateDate);
        //moFields.addField(moIntNumber);
        moFields.addField(moTextItem);
        moFields.addField(moTextSupplier);
        moFields.addField(moTextLocality);
        moFields.addField(moTextNotes);
        moFields.addField(moTextNotesOnDelete);
        //moFields.addField(moCompWeightNet_r.getField());
        moFields.addField(moCurPriceUnitary.getField());
        //moFields.addField(moCurTotal_r.getField());
        //moFields.addField(moCurPayments.getField());
        //moFields.addField(moCurBalance.getField());
        moFields.addField(moCurPaymentPayment.getField());
        //moFields.addField(moCurBalanceNew.getField());

        moFields.setFormButton(jbSave);
    }

    private void computeBalance() {
        moCurBalanceNew.getField().setValue(SLibUtils.round(moCurBalance.getField().getValue() -
                moCurPaymentPayment.getField().getValue(),
                SLibUtils.getDecimalFormatAmount().getMaximumFractionDigits()));
    }

    private void actionPayBalance() {
        moCurPaymentPayment.getField().setValue(moCurBalance.getField().getValue());
        moCurPaymentPayment.getField().getComponent().requestFocus();
        computeBalance();
    }

    /*
     * Public methods
     */

    /*
     * Overriden methods
     */

    @Override
    public void addAllListeners() {
        jbPayBalance.addActionListener(this);
        moCurPaymentPayment.getField().getComponent().addFocusListener(this);
    }

    @Override
    public void removeAllListeners() {
        jbPayBalance.removeActionListener(this);
        moCurPaymentPayment.getField().getComponent().removeFocusListener(this);
    }

    @Override
    public void reloadCatalogues() {

    }

    @Override
    public void setRegistry(SDbRegistry registry) throws Exception {
        SDbWeighing weighing = null;

        moRegistry = (SDbPayment) registry;
        weighing = (SDbWeighing) miClient.getSession().readRegistry(SModConsts.O_WEI, new int[] { moRegistry.getFkWeighingId() });

        mnFormResult = SLibConsts.UNDEFINED;
        mbFirstActivation = true;

        removeAllListeners();
        reloadCatalogues();

        if (moRegistry.isRegistryNew()) {
            moRegistry.initPrimaryKey();
            moRegistry.setDate(miClient.getSession().getCurrentDate());
            jtfRegistryKey.setText("");
        }
        else {
            jtfRegistryKey.setText(SLibUtils.textKey(moRegistry.getPrimaryKey()));
        }

        moDatePaymentDate.setValue(moRegistry.getDate());
        moIntPaymentNumber.setValue(moRegistry.getNumber());
        moCurPaymentPayment.getField().setValue(moRegistry.getPayment());

        moDateDate.setValue(weighing.getDate());
        moIntNumber.setValue(weighing.getNumber());
        moTextItem.setValue((String) miClient.getSession().readField(SModConsts.OU_ITM, new int[] { weighing.getFkItemId() }, SDbRegistry.FIELD_NAME));
        moTextSupplier.setValue((String) miClient.getSession().readField(SModConsts.OU_SUP, new int[] { weighing.getFkSupplierId() }, SDbRegistry.FIELD_NAME));
        moTextLocality.setValue((String) miClient.getSession().readField(SModConsts.OU_LOC, new int[] { weighing.getFkLocalityId() }, SDbRegistry.FIELD_NAME));
        moTextNotes.setValue(weighing.getNotes());
        moTextNotesOnDelete.setValue(weighing.getNotesOnDelete());
        moCompWeightNet_r.getField().setValue(weighing.getWeightNet_r());
        moCurPriceUnitary.getField().setValue(weighing.getPriceUnitary());
        moCurTotal_r.getField().setValue(weighing.getTotal_r());

        try {
            moCurPayments.getField().setValue(SOpeUtils.getWeighingOtherPayments(miClient.getSession(), weighing.getPkWeighingId(), moRegistry.getPkPaymentId()));
        }
        catch (Exception e) {
            SLibUtils.showException(this, e);
        }

        computeBalance();

        setFormEditable(true);
        addAllListeners();
    }

    @Override
    public SDbPayment getRegistry() throws Exception {
        SDbPayment registry = moRegistry.clone();

        if (registry.isRegistryNew()) {}

        registry.setDate(moDateDate.getValue());
        registry.setNumber(moIntNumber.getValue());
        registry.setPayment(moCurPaymentPayment.getField().getValue());
        registry.setWeighing(false);
        registry.setFkWeighingId(moRegistry.getFkWeighingId());

        return registry;
    }

    @Override
    public SGuiValidation validateForm() {
        SGuiValidation validation = moFields.validateFields();

        if (validation.isValid()) {
            if (validation.isValid()) {
                if (moCurPaymentPayment.getField().getValue() == 0) {
                    if (miClient.showMsgBoxConfirm(SGuiConsts.MSG_CNF_FIELD_VAL_ + "'" + SGuiUtils.getLabelName(jlPaymentPayment) + "'" + SGuiConsts.ERR_MSG_FIELD_VAL_EQUAL + SLibUtils.getDecimalFormatAmount().format(0) + " " + miClient.getSession().getSessionCustom().getLocalCurrencyCode() + "?") != JOptionPane.YES_OPTION) {
                        validation.setMessage(SGuiConsts.ERR_MSG_FIELD_REQ + "'" + SGuiUtils.getLabelName(jlPaymentPayment) + "'.");
                        validation.setComponent(moCurPaymentPayment.getField().getComponent());
                    }
                }
                else if (moCurPaymentPayment.getField().getValue() - moCurTotal_r.getField().getValue() != 0) {
                    if (miClient.showMsgBoxConfirm(SGuiConsts.MSG_CNF_FIELD_VAL_ + "'" + SGuiUtils.getLabelName(jlPaymentPayment) + "'" + SGuiConsts.MSG_CNF_FIELD_VAL_DIF_FIELD + "'" + SGuiUtils.getLabelName(jlTotal_r) + "' por " + SLibUtils.getDecimalFormatAmount().format(moCurPaymentPayment.getField().getValue() - moCurTotal_r.getField().getValue()) + " " + miClient.getSession().getSessionCustom().getLocalCurrencyCode() + "?") != JOptionPane.YES_OPTION) {
                        validation.setMessage(SGuiConsts.ERR_MSG_FIELD_REQ_EQUAL + "'" + SGuiUtils.getLabelName(jlPaymentPayment) + "' y '" + SGuiUtils.getLabelName(jlTotal_r) + "'.");
                        validation.setComponent(moCurPaymentPayment.getField().getComponent());
                    }
                }
            }
        }

        return validation;
    }

    @Override
    public void actionPerformed(ActionEvent e) {
        if (e.getSource() instanceof JButton) {
            JButton button = (JButton) e.getSource();

            if (button == jbPayBalance) {
                actionPayBalance();
            }
        }
    }

    @Override
    public void focusGained(FocusEvent e) {

    }

    @Override
    public void focusLost(FocusEvent e) {
        if (e.getSource() instanceof SBeanFieldDecimal) {
            SBeanFieldDecimal field = (SBeanFieldDecimal) e.getSource();

            if (field == moCurPaymentPayment.getField()) {
                computeBalance();
            }
        }
    }
}
