/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package scale.mod.ope.form;

import sa.lib.SLibConsts;
import sa.lib.SLibUtils;
import sa.lib.db.SDbRegistry;
import sa.lib.gui.SGuiClient;
import sa.lib.gui.SGuiConsts;
import sa.lib.gui.SGuiUtils;
import sa.lib.gui.SGuiValidation;
import sa.lib.gui.bean.SBeanForm;
import scale.mod.SModConsts;
import scale.mod.ope.db.SDbItem;

/**
 *
 * @author Sergio Flores
 */
public class SFormItem extends SBeanForm {

    private SDbItem moRegistry;

    /**
     * Creates new form SFormLocality
     */
    public SFormItem(SGuiClient client, String title) {
        setFormSettings(client, SGuiConsts.BEAN_FORM_EDIT, SModConsts.OU_ITM, SLibConsts.UNDEFINED, title);
        initComponents();
        initComponentsCustom();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        jPanel3 = new javax.swing.JPanel();
        jlCode = new javax.swing.JLabel();
        moTextCode = new sa.lib.gui.bean.SBeanFieldText();
        jPanel4 = new javax.swing.JPanel();
        jlName = new javax.swing.JLabel();
        moTextName = new sa.lib.gui.bean.SBeanFieldText();
        jPanel5 = new javax.swing.JPanel();
        jlPriceUnitary = new javax.swing.JLabel();
        moCurPriceUnitary = new sa.lib.gui.bean.SBeanCompoundFieldCurrency();

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder("Datos del registro:"));
        jPanel1.setLayout(new java.awt.BorderLayout());

        jPanel2.setLayout(new java.awt.GridLayout(3, 0, 0, 5));

        jPanel3.setLayout(new java.awt.FlowLayout(3, 5, 0));

        jlCode.setText("CÃ³digo:*");
        jlCode.setPreferredSize(new java.awt.Dimension(100, 23));
        jPanel3.add(jlCode);

        moTextCode.setEditable(false);
        moTextCode.setText("TEXT");
        jPanel3.add(moTextCode);

        jPanel2.add(jPanel3);

        jPanel4.setLayout(new java.awt.FlowLayout(3, 5, 0));

        jlName.setText("Nombre:*");
        jlName.setPreferredSize(new java.awt.Dimension(100, 23));
        jPanel4.add(jlName);

        moTextName.setText("TEXT");
        moTextName.setPreferredSize(new java.awt.Dimension(250, 23));
        jPanel4.add(moTextName);

        jPanel2.add(jPanel4);

        jPanel5.setLayout(new java.awt.FlowLayout(3, 5, 0));

        jlPriceUnitary.setText("Precio unitario:");
        jlPriceUnitary.setPreferredSize(new java.awt.Dimension(100, 23));
        jPanel5.add(jlPriceUnitary);
        jPanel5.add(moCurPriceUnitary);

        jPanel2.add(jPanel5);

        jPanel1.add(jPanel2, java.awt.BorderLayout.PAGE_START);

        getContentPane().add(jPanel1, java.awt.BorderLayout.CENTER);
    }// </editor-fold>//GEN-END:initComponents
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JLabel jlCode;
    private javax.swing.JLabel jlName;
    private javax.swing.JLabel jlPriceUnitary;
    private sa.lib.gui.bean.SBeanCompoundFieldCurrency moCurPriceUnitary;
    private sa.lib.gui.bean.SBeanFieldText moTextCode;
    private sa.lib.gui.bean.SBeanFieldText moTextName;
    // End of variables declaration//GEN-END:variables

    /*
     * Private methods
     */

    private void initComponentsCustom() {
        SGuiUtils.setWindowBounds(this, 400, 250);

        moTextCode.setTextSettings(SGuiUtils.getLabelName(jlCode), 5);
        moTextName.setTextSettings(SGuiUtils.getLabelName(jlName), 50);
        moCurPriceUnitary.setCompoundFieldSettings(miClient);
        moCurPriceUnitary.setCompoundText(miClient.getSession().getSessionCustom().getLocalCurrencyCode());
        moCurPriceUnitary.getField().setDecimalSettings(SGuiUtils.getLabelName(jlPriceUnitary), SGuiConsts.GUI_TYPE_DEC_AMT_UNIT, false);

        //moFields.addField(moTextCode);    read-only
        moFields.addField(moTextName);
        moFields.addField(moCurPriceUnitary.getField());

        moFields.setFormButton(jbSave);
    }

    /*
     * Public methods
     */

    /*
     * Overriden methods
     */

    @Override
    public void addAllListeners() {

    }

    @Override
    public void removeAllListeners() {

    }

    @Override
    public void reloadCatalogues() {

    }

    @Override
    public void setRegistry(SDbRegistry registry) throws Exception {
        moRegistry = (SDbItem) registry;

        mnFormResult = SLibConsts.UNDEFINED;
        mbFirstActivation = true;

        removeAllListeners();
        reloadCatalogues();

        if (moRegistry.isRegistryNew()) {
            moRegistry.initPrimaryKey();
            moRegistry.setCode("");
            jtfRegistryKey.setText("");
        }
        else {
            jtfRegistryKey.setText(SLibUtils.textKey(moRegistry.getPrimaryKey()));
        }

        moTextCode.setValue(moRegistry.getCode());
        moTextName.setValue(moRegistry.getName());
        moCurPriceUnitary.getField().setValue(moRegistry.getPriceUnitary());

        setFormEditable(true);
        addAllListeners();
    }

    @Override
    public SDbItem getRegistry() throws Exception {
        SDbItem registry = moRegistry.clone();

        if (registry.isRegistryNew()) {}

        //registry.setCode(...);
        registry.setName(moTextName.getValue());
        registry.setPriceUnitary(moCurPriceUnitary.getField().getValue());

        return registry;
    }

    @Override
    public SGuiValidation validateForm() {
        return moFields.validateFields();
    }
}
